


<%
var log = new Log();
var serverDetails = require("/site/jagg/site.jag");
var msisdn = request.getParameter("msisdn");
var tokenid = request.getParameter("tokenid");
var operator = request.getParameter("operator");
operator=operator[0];
log.info('_______JHHHHHHHHHHHHHHHHHHHHHHHHHHHHH__________Operator: '+stringify(operator));
 
var acr = request.getParameter("acr");
if(request.getParameter("smsClick")!=null){
  var smsClick=request.getParameter("smsClick");
}

log.info("acr value "+acr);;
log.info("sms link clicked "+smsClick);

// var authenticator=request.getParameter("authenticator");
var constants = require("/util/constants.jag");
var selfReg = require('/controllers/user-registration/userRegistrationClient.jag');
var strBackend = '';
registerUser();
function registerUser() {
  try {
    if (isUserExists() != "true") {
      saveRequestDetails();
      getUserChallanges();
      if(tokenid){
        updateMsisdn();
      }
      print("false");
      } else {
        print("true");
      }
      } catch (e) {
        log.error("Error occurred while accessing server" + e);
      }
    }

    function updateMsisdn() {
      var url = serverDetails.getWebAppsUrl() + "user-registration/webresources/endpoint/user/authenticate/updatemsisdn?msisdn=" + msisdn+"&tokenid="+tokenid;
      var xhr = new XMLHttpRequest();
      xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      xhr.open("GET", url, false);//async=false
      xhr.send();
      return xhr.responseText;
    }

    function isUserExists() {

      var url = serverDetails.getWebAppsUrl() + "user-registration/webresources/endpoint/user/exists?username=" + msisdn;
      var xhr = new XMLHttpRequest();
      xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      xhr.open("GET", url, false);//async=false
      xhr.send();

      log.info(xhr.responseText +" xhr.responseText");

      return xhr.responseText;
    }

    function getUserChallanges() {
      //log.info("came-3244444444");
      //log.info(msisdn);
      readRequestValues();
      var xhr = new XMLHttpRequest();
      xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      log.info("calling.........."+strBackend);
      xhr.open("GET", strBackend, true);//async=true
      xhr.send();

      //result.status = 'success';
      //result.message = "PIN reset request sent to your mobile phone " + msisdn + ". Check phone to create new PIN.";
      //print(result);
    }

    function saveRequestDetails() {
      var url = serverDetails.getWebAppsUrl() + "user-registration/webresources/endpoint/ussd/saverequest?msisdn=" + msisdn + "&requesttype=1";
      //log.info("xxxxxxx>" + url);
      var xhr = new XMLHttpRequest();
      xhr.open("GET", url, false);//async=false
      xhr.send();
      //log.info("fffffffffffffffffffffff>" + xhr.responseText.toString());
      //var result = parse(xhr.responseText.toString());
      //return result.status;
    }

    function readRequestValues() {
      var domain = request.getParameter("domain");
      var userNameVal = request.getParameter("userName");
      var openId = session.get("openIdURL");
      var password = request.getParameter("pwd");
      var claim = constants.DEFAULT_CLAIM_URL;
      if (session.get('openid') != null) {
        claim = constants.OPENID_REG_CLAIM_URL;
      }
      var paramValues = '';

      var fieldValues = selfReg.readUserFieldsForUserRegistration(claim, true);
      fieldValues = fieldValues.*::['return'];

      for each(var f
        in
        fieldValues
        )
      {
        var paramName = f.*::['claimUri'].text().toString();
        var value = request.getParameter(paramName);
        paramValues = paramValues + value + ",";
      }
      paramValues = paramValues.substr(0, paramValues.length - 1);
      paramValues = "params=" + encodeURIComponent(paramValues);
      var tmp = paramValues + "&claim=" + claim;


      // log.info("================================ authenticator" + authenticator);






      if(smsClick){

        log.info("SMS Authentications acr" + acr);
        strBackend = serverDetails.getWebAppsUrl() + "user-registration/webresources/endpoint/sms/oneapi?" + "username=" + msisdn + "&" + "msisdn=" + msisdn + "&openId=" + openId + "&password=" + password + "&domain=" + domain + "&" + tmp +"&operator="+operator;
log.info("_____________________****________ strBackend :" + strBackend);
        }else{
          if(acr=="USSDPinAuthenticator"){

            log.info("USSDPIN Authentications acr" + acr);

            strBackend = serverDetails.getWebAppsUrl() + "user-registration/webresources/endpoint/ussd/pin?" + "username=" + msisdn + "&" + "msisdn=" + msisdn + "&openId=" + openId + "&password=" + password + "&domain=" + domain + "&" + tmp +"&operator="+operator;

          }


          if(acr=="USSDAuthenticator"){
            log.info("USSD Authentications acr" + acr);
            strBackend = serverDetails.getWebAppsUrl() + "user-registration/webresources/endpoint/ussd/push?" + "username=" + msisdn + "&" + "msisdn=" + msisdn + "&openId=" + openId + "&password=" + password + "&domain=" + domain + "&" + tmp +"&operator="+operator;

          }

        }


        log.info("selected endpint url "+strBackend);


      }
      %>
