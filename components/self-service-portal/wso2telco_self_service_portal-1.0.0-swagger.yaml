swagger: '2.0'
# host: localhost
# basePath: /api/v1
info:
  version: "1.0.0"
  title: SELF SERVICE PORTAL API
  description: |
    Contains back-end API methods of the self service portal of MIG.
    ### Structure : The Envelope
    #### SUCCESS RESPONSE
    Every sucess response is wrapped by an envelope with data parameter which contains the actual response for the request:
    ```json
    {
        "data": {
          ...
        }
    }
    ```

    #### LIST OF ITEMS SUCCESS RESPONSE
    Every sucess item set response is wrapped by an envelope with data parameter which contains the actual response set for the request:
    ```json
    {
        "data": {
          "items": [ ... ]
        }
    }
    ```

    #### PAGED RESPONSE
    Paged results contained in following envelope format:
    ```json
    {
        "data": {
          "meta": {
            "perPage": 15,
            "page": 1,
            "total_count": 50
          },
          "items": [ ... ]
        }
    }
    ```

    #### ERROR RESPONSE
    Every error response is contained by an envelope:
    ```json
    {
        "error": {
          "code" : "error_code"
          "message": "Error message here"
        }
    }
    ```


definitions:
  ErrorResponseModel:
    properties:
      error:
        type: object
        properties:
          code:
            type: "string"
          message:
            type: "string"

  UserInfoResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserInfoModel'

  UserInfoModel:
    required:
      - "phone"
      - "sub"
    properties:
      phone:
        type: "string"
      sub:
        type: "string"

  LoginHistoryResultsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/LoginHistoryResultsModel'

  AppLoginsResultsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AppLoginsResultsModel'

  PinResetResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          success:
            type: "boolean"

  LoginHistoryResultsModel:
    type: object
    properties:
      meta:
        $ref: '#/definitions/MetaModel'
      items:
        type: array
        items:
         $ref: '#/definitions/LoginHistoryModel'

  AppLoginsResultsModel:
    type: object
    properties:
      items:
        type: array
        items:
         $ref: '#/definitions/AppLoginModel'

  LoginHistoryModel:
    properties:
      id:
        type: "integer"
      reqtype:
        type: "string"
      application_id:
        type: "string"
      authenticated_user:
        type: "string"
      isauthenticated:
        type: "boolean"
      authenticators:
        type: "boolean"
      ipaddress:
        type: "string"
      created:
        type: "string"
      created_date:
        type: string
      lastupdated:
        type: "string"
      lastupdated_date:
        type: "string"
      duration:
        type: number

  AppLoginModel:
    properties:
      application_id:
        type: "string"
      created_date:
        type: string
      login_count:
        type: "number"

  MetaModel:
    properties:
      perPage:
        type: "integer"
      page:
        type: "integer"
      total_count:
        type: "integer"


paths:
  /auth/login:
    get:
      parameters:
        - name: msisdn
          in: query
          description: |
            Login hint MSISDN
          required: true
          type: string
        - name: acr
          in: query
          description: |
            ACR value
          type: string
      tags:
        - Auth
      description: |
        Constructs the login URL and redirects user to OAuth login flow of MIG.
      responses:
        307:
          description: Temporary Redirect
        400:
          description: |
            `Bad Request` with code
            `no_msisdn`
          schema:
            $ref: '#/definitions/ErrorResponseModel'
        503:
          description: |
            `Service Unavailable` with code
            `missing_config`,
            `invalid_config`
          schema:
            $ref: '#/definitions/ErrorResponseModel'
        500:
          description: |
            `Internal Server Error` with code
            `invalid_config`
          schema:
            $ref: '#/definitions/ErrorResponseModel'


  /auth/callback:
    get:
      parameters:
        - name: code
          in: query
          description: |
            Authentication code obtained from the initial OAuth flow of MIG product.
          required: true
          type: string
      tags:
        - Auth
      description: |
        Callback URL of the OAuth call from MIG. This API endpoint redirects the request either with
        success code or error code back to self service portal URL. You can set
        redirect URI of the Service Provider in MIG for this API endpoint. Callback endpoint takes code parameter from initial auth call and redirects to redirect url (configured in mobile connect) with access token. On failure redirects to redirect url with 'error' parameter.
      responses:
        307:
          description: Temporary Redirect
          schema:
            properties:
              acaccess_token:
                type: string
        503:
          description: |
            `Service Unavailable` with code
            `invalid_config`
          schema:
            $ref: '#/definitions/ErrorResponseModel'
        500:
          description: |
            `Internal Server Error` with code
            `invalid_config`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

  /auth/validate:
    get:
      parameters:
        - name: access_token
          in: query
          description: |
            Access token which should be validated
          required: true
          type: string
      tags:
        - Auth
      description: |
        Validates the access token and returns the response from MIG `userinfo` call
      responses:
        200:
          description: |
            Successfully validated response
          schema:
            $ref: '#/definitions/UserInfoResponse'
        401:
          description: |
            `Unauthorized` with code
            `no_access_token`,
            `error`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

  /user/login_history:
    get:
      parameters:
        - name: access_token
          in: query
          description: |
            A valid access token
          required: true
          type: string
        - name: page
          in: query
          default: 1
          description: |
            Page number
          required: false
          type: integer
        - name: limit
          in: query
          default: 15
          description: |
            Results per page
          required: false
          type: integer
      tags:
        - User
      description: |
        Returns login history of current authenticated user. User MSISDN is retrieved from the
        `access_token`
      responses:
        200:
          description: |
            Successful response
          schema:
            $ref: '#/definitions/LoginHistoryResultsResponse'
        401:
          description: |
            `Unauthorized` with code
            `invalid_token`
          schema:
            $ref: '#/definitions/ErrorResponseModel'
        500:
          description: |
            `Internal Server Error` with code
            `login_history_error`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

  /user/app_logins:
    get:
      parameters:
        - name: access_token
          in: query
          description: |
            A valid access token
          required: true
          type: string
      tags:
        - User
      description: |
        Returns application login count of current authenticated user. User MSISDN is retrieved from the
        `access_token`
      responses:
        200:
          description: |
            Successful response
          schema:
            $ref: '#/definitions/AppLoginsResultsResponse'
        401:
          description: |
            `Unauthorized` with code
            `invalid_token`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

        500:
          description: |
            `Internal Server Error` with code
            `app_login_error`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

  /user/loa:
    get:
      parameters:
        - name: access_token
          in: query
          description: |
            A valid access token
          required: true
          type: string
      tags:
        - User
      description: |
        Get current user's LOA value. User MSISDN is retrieved from the
        `access_token`
      responses:
        200:
          description: |
            Successful response
          schema:
            properties:
              data:
                type: object
                properties:
                  loa:
                    type: number

        401:
          description: |
            Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponseModel'

  /user/pin_reset:
    post:
      parameters:
        - name: access_token
          in: query
          description: |
            A valid access token
          required: true
          type: string
        - name: new_pin
          in: query
          description: |
            New PIN
          required: true
          type: string
        - name: current_pin
          in: query
          description: |
            Current PIN
          required: true
          type: string
      tags:
        - User
      description: |
        Resets the PIN of an LOA 3 existing user. User MSISDN is retrieved from the
        `access_token`
      responses:
        200:
          description: |
            Successful response
          schema:
            $ref: '#/definitions/PinResetResponse'
        401:
          description: |
            `Unauthorized` with code
            `invalid_token`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

        400:
          description: |
            `Bad Request` with code
            `current_pin_missing`,
            `new_pin_missing`,
            `pin_mismatched`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

        500:
          description: |
            `Internal Server Error` with code
            `admin_service_error`
          schema:
            $ref: '#/definitions/ErrorResponseModel'

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /poosathecat/wso2telco_self_service_portal/1.0.0
schemes:
 - https